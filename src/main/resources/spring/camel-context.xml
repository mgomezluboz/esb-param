<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:crypt="http://springcryptoutils.com/schema/crypt"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring       http://camel.apache.org/schema/spring/camel-spring.xsd	http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd http://springcryptoutils.com/schema/crypt http://springcryptoutils.com/schema/crypt.xsd">
    
    <bean class="org.apache.camel.component.properties.PropertiesComponent" id="properties">
	    <property name="location" value="classpath:application.properties"/>
	</bean>
	
	 <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
	    <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.varegos.dto"/>
        <property name="persistenceXmlLocation" value="classpath:persistence.xml"/>
        <property name="persistenceUnitName" value="pUnit"/>
	</bean>
    
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver" />
		<property name="url" value="${datasource.url}" />
		<property name="username" value="${datasource.username}" />
		<property name="password" value="${datasource.password}" />
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
	</bean>
	
	<bean id="exceptionHandler" class="com.varegos.ExceptionHandler"/>
	<bean id="paramDao" class="com.varegos.ParamDAO"/>
	<crypt:keystore id="keyStore" 
                location="classpath:param.jceks"
                password="vikingo2021"
                type="JCEKS"/>
	<crypt:secretKey id="secretKey"
                 keystore-ref="keyStore"
                 alias="param"
                 password="vikingo2021"/>
	
	<jpa:repositories base-package="com.varegos"/>
    
    <camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">
    
    	<dataFormats>
		    <json id="jackson" library="Jackson"/>
		    <crypto id="decrypt" algorithm="AES/ECB/PKCS5Padding" keyRef="secretKey" />
		</dataFormats>
    
    	<onException>
            <exception>javax.validation.ConstraintViolationException</exception>
            <exception>com.varegos.exceptions.NotFoundException</exception>
            <handled>
                <constant>true</constant>
            </handled>
            <log message="Exception found: ${exception.message}"/>
            <process ref="exceptionHandler"/>
            <marshal><custom ref="jackson"/></marshal>
        </onException>
        
        <restConfiguration bindingMode="json" port="{{server.port}}">
            <componentProperty key="clientRequestValidation" value="true"/>
        </restConfiguration>
    
        <route id="get-params">
            <from uri="direct:get-params"/>
            <log message="> Obteniendo parametros, route id: ${header.routeId}"/>
            <to uri="ehcache://parametros?action=GET&amp;key=#${header.routeId}&amp;configurationUri=classpath:ehcache.xml&amp;keyType=java.lang.String&amp;valueType=java.util.List"/>
            <choice>
            	<when>
            	<simple>${header.CamelEhcacheActionHasResult} == true</simple>
            		<log message="> Encontrado en la cache ${body}"/>
            		<setHeader headerName="cache"><constant>1</constant></setHeader>
            	</when>
            	<when>
            	<simple>${header.CamelEhcacheActionHasResult} == false</simple>
            		<log message="> Buscando parametros en la base de datos"/>
            		<bean ref="paramDao" method="getParams"/>
		            <choice>
		            	<when>
		            		<simple>${header.Decrypt} == '1'</simple>
		            		<to uri="direct:decrypt"/>
		            	</when>
		            </choice>
		            <to uri="ehcache://parametros?action=PUT&amp;key=#${header.routeId}&amp;configurationUri=classpath:ehcache.xml&amp;keyType=java.lang.String&amp;valueType=java.util.List"/>
            	</when>
            </choice>
            
            <setHeader headerName="Exchange.HTTP_RESPONSE_CODE">
                <constant>200</constant>
            </setHeader>
            <setBody>
                <simple>${body}</simple>
            </setBody>
        </route>
        
        <route id="clear-cache">
            <from uri="direct:clear-cache"/>
            <log message="> Limpiando cache de parametros..."/>
            <bean ref="paramDao" method="clearCache"/>
            <setHeader headerName="Exchange.HTTP_RESPONSE_CODE">
                <constant>202</constant>
            </setHeader>
        </route>
        
        <route id="decrypt-route">
            <from uri="direct:decrypt"/>
            <setHeader headerName="OriginalBody">
                <simple>${body}</simple>
            </setHeader>
            <setBody>
                <simple>${header.DecryptValue}</simple>
            </setBody>
        	<log message="> Desencriptando ${body}"/>
            <unmarshal>
            	<base64/>
            </unmarshal>
            <unmarshal ref="decrypt"/>
            <log message="> Resultado: ${body}"/>
            <bean ref="paramDao" method="processDecryptedParam"/>
        </route>
    </camelContext>
</beans>
